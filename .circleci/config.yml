workspace_root: &workspace_root
  ~/repo

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10

version: 2
jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: *workspace_root
      - run:
          name: Compile artifacts
          command: npm run build
      - run:
          name: Package artifact
          command: npm pack
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .

  deploy-to-production:
    <<: *defaults
    docker:
      - image: circleci/python:3
    steps:
      - attach_workspace:
          at: *workspace_root
      - add_ssh_keys:
          fingerprints:
            - "47:1c:8b:3d:98:f9:c0:1c:7c:2d:77:e9:cd:46:da:cf"
      - run:
          name: Install rsync
          command: sudo apt-get install rsync -y
      - run:
          name: Install python requirements
          command: |
            python3 -m venv .venv
            . .venv/bin/activate
            pip install ansible vrun
      - run:
          name: Install ansible requirements
          command: ./.venv/bin/vrun ansible-galaxy install -r requirements-ansible.yml
      - run:
          name: Configure ansible inventory
          command: echo -e "[web]\n${PRODUCTION_DEPLOY_HOST}" > inventory.yml
      - run:
          name: Deploy to Production
          command: >
            env
            NGINX_STATIC_VERSION=$CIRCLE_TAG
            ./.venv/bin/vrun ansible-playbook deploy.yml -i inventory.yml

workflows:
  version: 2
  build-n-deploy:
    jobs:
      - install:
          filters:
            tags:
              only: /v[0-9]+\.[0-9]+\.[0-9]+/
      - build:
          requires:
            - install
          filters:
            tags:
              only: /v[0-9]+\.[0-9]+\.[0-9]+/
      - deploy-to-production:
          requires:
            - build
          filters:
            tags:
              only: /v[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
